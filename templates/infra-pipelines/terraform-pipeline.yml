variables:
  TERRAFORM_DIRECTORY_NAME: "infra"
  TERRAFORM_DIRECTORY_NAME_VARIABLES: "envs"
  REPLACE_PATTERN: "#pipeline:replace:"
  CODE_PATH: ""

.tf_base:
  image:
    name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest
  variables:
    TF_STATE: ${CI_PROJECT_NAME}-${CI_ENVIRONMENT_NAME}
    TF_ADDRESS: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/terraform/state
  before_script:
    - terraform --version
    - cd $TERRAFORM_DIRECTORY_NAME/$CODE_PATH
    - ls -l
    - echo "Base state address for this repository ${TF_ADDRESS}"
    - echo "Using ${TF_STATE} as the specific statekey"
    - echo "Full state path ${TF_ADDRESS}/${TF_STATE}"

    - terraform init
      --backend-config="address=${TF_ADDRESS}/${TF_STATE}"
      --backend-config="lock_address=${TF_ADDRESS}/${TF_STATE}/lock"
      --backend-config="unlock_address=${TF_ADDRESS}/${TF_STATE}/lock"
      --backend-config="username=gitlab-ci-token"
      --backend-config="password=${CI_JOB_TOKEN}"
      --backend-config="lock_method=POST"
      --backend-config="unlock_method=DELETE"
      --backend-config="retry_wait_min=5"

.tf_plan:
  extends: .tf_base
  script:
    - echo "Going to execute terraform plan"
    - terraform validate
    - terraform plan -out "planfile"
    - terraform show

.tf_deploy:
  extends: .tf_base
  script:
    - terraform apply -input=false "planfile" -auto-approve

.promote_tf:
  extends: .tf_base
  script:
    - terraform plan -out="planfile"
    - terraform apply -input=false "planfile" -auto-approve
  
.tf_destroy:
  extends: .tf_base
  script:
    - terraform destroy -auto-approve -no-color